kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ template "onlyoffice.fullname" . }}
  labels:
    app: {{ template "name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ template "name" . }}
      release: {{ .Release.Name }}
  replicas: {{ .Values.replicas }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}-onlyoffice
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
{{- if .Values.image.pullPolicy }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
{{- end }}
#          command: ['/bin/sh', '-c', 'while true; do echo hello; sleep 10;done']
{{- if .Values.resources }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
{{- end }}
{{- if .Values.secret.enabled }}
          env:
            - name: JWT_ENABLED
              value: 'true'
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "onlyoffice.fullname" . }}
                  key: onlyoffice-secret
{{- end }}
          ports:
            - name: onlyoffice-http
              containerPort: 80
              protocol: TCP
#          livenessProbe:
#            httpGet:
#              path: /
#              port: 80
#            initialDelaySeconds: 300
#            timeoutSeconds: 30
